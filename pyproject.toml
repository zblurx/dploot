[tool.poetry]
name = "dploot"
version = "3.0.0"
description = "DPAPI looting remotely in Python"
readme = "README.md"
homepage = "https://github.com/zblurx/dploot"
repository = "https://github.com/zblurx/dploot"
keywords = ["DPAPI", "credentials", "Windows"]
authors = ["zblurx <seigneuret.thomas@protonmail.com>"]
license = "MIT"
classifiers = [
    "Topic :: Security",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Environment :: Console"
]
packages = [
    { include = "dploot"},
    { include = "dploot/lib"},
    { include = "dploot/action"},
    { include = "dploot/triage"},
]

[tool.poetry.scripts]
dploot = "dploot.entry:main"

[tool.poetry.dependencies]
python = "^3.7"
impacket = ">=0.10.0"
cryptography = ">=40.0.1"
pyasn1 = "^0.4.8"
lxml = "4.9.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.3"

[tool.ruff]
# From NetExec
# Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# Other options: pep8-naming (N), flake8-annotations (ANN), flake8-blind-except (BLE), flake8-commas (COM), flake8-pyi (PYI), flake8-pytest-style (PT), flake8-unused-arguments (ARG), etc
# Should tackle flake8-use-pathlib (PTH) at some point
select = ["E", "F", "D", "UP", "YTT", "ASYNC", "B", "A", "C4", "ISC", "ICN", "PIE", "PT", "Q", "RSE", "RET", "SIM", "TID", "ERA", "FLY", "PERF", "FURB", "LOG", "RUF"]
ignore = [ "E501", "F405", "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D204", "D205", "D212", "D213", "D400", "D401", "D415", "D417", "D419", "RET503", "RET505", "RET506", "RET507", "RET508", "PERF203", "RUF012", "SIM115"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

line-length = 65000

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py37"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
